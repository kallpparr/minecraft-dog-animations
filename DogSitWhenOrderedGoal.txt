//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package doggytalents.common.entity.ai;

import doggytalents.api.anim.DogAnimation;
import doggytalents.common.entity.Dog;
import java.util.EnumSet;
import net.minecraft.entity.ai.goal.Goal;
import net.minecraft.entity.ai.goal.Goal.Control;

public class DogSitWhenOrderedGoal extends Goal {
    Dog dog;
    private boolean ownerOffline;

    public DogSitWhenOrderedGoal(Dog dog) {
        this.dog = dog;
        this.setControls(EnumSet.of(Control.JUMP, Control.MOVE));
    }

    public boolean canStart() {
        if (this.dog.hasVehicle()) {
            return true;
        } else if (!this.dog.forceSit() && this.dog.dogAi.isActionBlockingSit()) {
            return false;
        } else if (!this.dog.isOnGround()) {
            return false;
        } else if (this.dog.isInsideWaterOrBubbleColumn()) {
            return false;
        } else {
            return this.dog.isSitting() || this.dog.getOwner() == null;
        }
    }

    public void start() {
        this.dog.dogAi.clearTriggerableAction();
        this.ownerOffline = this.dog.getOwner() == null;
        this.dog.getNavigation().stop();
        this.dog.setInSittingPose(true);
    }

    public boolean shouldContinue() {
        if (this.dog.hasVehicle()) {
            return true;
        } else if (this.dog.fallDistance > 3.0F) {
            return false;
        } else if (this.dog.isSitting()) {
            return true;
        } else {
            if (this.ownerOffline) {
                this.ownerOffline = this.dog.getOwner() == null;
            }

            return this.ownerOffline;
        }
    }

    public void stop() {
        this.dog.setInSittingPose(false);
    }

    public void tick() {
        if (!this.dog.isInSittingPose() && this.dog.getAnim() == DogAnimation.NONE) {
            this.dog.setInSittingPose(true);
        }

    }
}


